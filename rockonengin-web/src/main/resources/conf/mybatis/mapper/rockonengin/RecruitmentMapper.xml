<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rockonengin.dao.rockonengin.RecruitmentMapper" >
  <resultMap id="BaseResultMap" type="com.rockonengin.model.entity.Recruitment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_title" property="jobTitle" jdbcType="VARCHAR" />
    <result column="recruitment_number" property="recruitmentNumber" jdbcType="VARCHAR" />
    <result column="job_desc" property="jobDesc" jdbcType="VARCHAR" />
    <result column="job_requirement" property="jobRequirement" jdbcType="VARCHAR" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, job_title, recruitment_number, job_desc, job_requirement, insert_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from recruitment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from recruitment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rockonengin.model.entity.Recruitment" >
    insert into recruitment (id, job_title, recruitment_number, 
      job_desc, job_requirement, insert_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{jobTitle,jdbcType=VARCHAR}, #{recruitmentNumber,jdbcType=VARCHAR}, 
      #{jobDesc,jdbcType=VARCHAR}, #{jobRequirement,jdbcType=VARCHAR}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rockonengin.model.entity.Recruitment" >
    insert into recruitment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobTitle != null" >
        job_title,
      </if>
      <if test="recruitmentNumber != null" >
        recruitment_number,
      </if>
      <if test="jobDesc != null" >
        job_desc,
      </if>
      <if test="jobRequirement != null" >
        job_requirement,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobTitle != null" >
        #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="recruitmentNumber != null" >
        #{recruitmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null" >
        #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="jobRequirement != null" >
        #{jobRequirement,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rockonengin.model.entity.Recruitment" >
    update recruitment
    <set >
      <if test="jobTitle != null" >
        job_title = #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="recruitmentNumber != null" >
        recruitment_number = #{recruitmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null" >
        job_desc = #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="jobRequirement != null" >
        job_requirement = #{jobRequirement,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rockonengin.model.entity.Recruitment" >
    update recruitment
    set job_title = #{jobTitle,jdbcType=VARCHAR},
      recruitment_number = #{recruitmentNumber,jdbcType=VARCHAR},
      job_desc = #{jobDesc,jdbcType=VARCHAR},
      job_requirement = #{jobRequirement,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>